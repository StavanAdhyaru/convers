{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Container, Card, UserInfo, UserImgWrapper, UserImg, UserInfoText, UserName, PostTime, MessageText, TextSection } from \"./Styles/MessageStyles\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Menu } from \"react-native-web/dist/index\";\nimport { getUserDetails, getAllUsers } from \"../API/user\";\nimport { auth } from \"../firebase\";\nimport { useEffect, useState } from 'react';\nimport { AsyncStorage } from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar usersList = [{\n  id: '1',\n  userName: 'Stavan Doe',\n  userImg: require(\"../assets/users/user-1.jpeg\"),\n  messageTime: '4 mins ago',\n  messageText: 'Hey there, this is my test for a post of my social app in React Native.'\n}, {\n  id: '2',\n  userName: 'John Doe',\n  userImg: require(\"../assets/users/user-2.jpeg\"),\n  messageTime: '2 hours ago',\n  messageText: 'Hey there, this is my test for a post of my social app in React Native.'\n}, {\n  id: '3',\n  userName: 'Ken William',\n  userImg: require(\"../assets/users/user-3.jpeg\"),\n  messageTime: '1 hours ago',\n  messageText: 'Hey there, this is my test for a post of my social app in React Native.'\n}, {\n  id: '4',\n  userName: 'Selina Paul',\n  userImg: require(\"../assets/users/user-4.jpeg\"),\n  messageTime: '1 day ago',\n  messageText: 'Hey there, this is my test for a post of my social app in React Native.'\n}, {\n  id: '5',\n  userName: 'Christy Alex',\n  userImg: require(\"../assets/users/user-8.jpeg\"),\n  messageTime: '2 days ago',\n  messageText: 'Hey there, this is my test for a post of my social app in React Native.'\n}];\n\nvar ContactListPage = function ContactListPage(_ref) {\n  var navigation = _ref.navigation,\n      item = _ref.item;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUser = _useState2[0],\n      setCurrentUser = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      allUsers = _useState4[0],\n      setAllUsers = _useState4[1];\n\n  var currentUserId = auth.currentUser.uid;\n\n  var _useState5 = useState(usersList),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dataFromState = _useState6[0],\n      setData = _useState6[1];\n\n  var searchName = function searchName(input) {\n    var data = dataFromState;\n    var searchData = data.filter(function (item) {\n      return item.userName.toLowerCase().includes(input.toLowerCase());\n    });\n    setData(searchData);\n  };\n\n  useEffect(function () {\n    readUser();\n    getAllUsersFromDB();\n  }, []);\n\n  var readUser = function _callee() {\n    var user, getUser;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 2:\n            user = _context.sent;\n\n            if (!user) {\n              _context.next = 8;\n              break;\n            }\n\n            console.log('user: ', JSON.parse(user));\n            setCurrentUser(JSON.parse(user));\n            _context.next = 14;\n            break;\n\n          case 8:\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(getUserDetails(currentUserId));\n\n          case 10:\n            getUser = _context.sent;\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('user', JSON.stringify(getUser)));\n\n          case 13:\n            setCurrentUser(getUser);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getAllUsersFromDB = function _callee2() {\n    var tempAllUsers, userList;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getAllUsers());\n\n          case 2:\n            tempAllUsers = _context2.sent;\n            userList = tempAllUsers.filter(function (element) {\n              return element.id != currentUserId;\n            });\n            setAllUsers(userList);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(Container, {\n    children: [_jsx(View, {\n      children: _jsx(TextInput, {\n        placeholder: \"Seach Friend\",\n        onChangeText: function onChangeText(input) {\n          searchName(input);\n        },\n        style: {\n          fontSize: 18\n        }\n      })\n    }), _jsx(FlatList, {\n      data: allUsers,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(Card, {\n          onPress: function onPress() {\n            return navigation.navigate('Chat', {\n              userId: item.id,\n              loggedInUserId: currentUserId,\n              name: currentUser.name,\n              avatar: currentUser.profileImageUrl,\n              receipentName: item.name,\n              receipentProfileImage: item.profileImageUrl\n            });\n          },\n          children: _jsxs(UserInfo, {\n            children: [_jsx(Image, {\n              source: {\n                uri: item.profileImageUrl\n              },\n              style: {\n                width: 50,\n                height: 50,\n                borderRadius: 100,\n                alignSelf: \"center\"\n              }\n            }), _jsxs(TextSection, {\n              children: [_jsxs(UserInfoText, {\n                children: [_jsx(UserName, {\n                  children: item.name\n                }), _jsx(PostTime, {\n                  children: item.messageTime\n                })]\n              }), _jsx(MessageText, {\n                children: item.messageText\n              })]\n            })]\n          })\n        });\n      },\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    alignItems: 'center',\n    marginTop: 25\n  },\n  signIn: {\n    width: 340,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10\n  },\n  textSign: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nexport default ContactListPage;","map":{"version":3,"names":["Container","Card","UserInfo","UserImgWrapper","UserImg","UserInfoText","UserName","PostTime","MessageText","TextSection","Menu","getUserDetails","getAllUsers","auth","useEffect","useState","AsyncStorage","usersList","id","userName","userImg","require","messageTime","messageText","ContactListPage","navigation","item","currentUser","setCurrentUser","allUsers","setAllUsers","currentUserId","uid","dataFromState","setData","searchName","input","data","searchData","filter","toLowerCase","includes","readUser","getAllUsersFromDB","getItem","user","console","log","JSON","parse","getUser","setItem","stringify","tempAllUsers","userList","element","fontSize","navigate","userId","loggedInUserId","name","avatar","profileImageUrl","receipentName","receipentProfileImage","uri","width","height","borderRadius","alignSelf","index","toString","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","button","marginTop","signIn","textSign","fontWeight"],"sources":["/Users/stavan/Documents/End_Sem_Project/Screens/ContactListPage.js"],"sourcesContent":["import {\n    Container,\n    Card,\n    UserInfo,\n    UserImgWrapper,\n    UserImg,\n    UserInfoText,\n    UserName,\n    PostTime,\n    MessageText,\n    TextSection,\n} from './Styles/MessageStyles';\nimport {\n    View,\n    Text,\n    TouchableOpacity,\n    TextInput,\n    Platform,\n    StyleSheet,\n    StatusBar,\n    Alert,\n    Button,\n    Dimensions, Image, FlatList, Menu\n} from 'react-native';\nimport { getUserDetails, getAllUsers } from '../API/user';\nimport { auth } from '../firebase';\nimport { useEffect, useState } from 'react';\nimport { AsyncStorage } from '@react-native-async-storage/async-storage';\n\nconst usersList = [\n    {\n        id: '1',\n        userName: 'Stavan Doe',\n        userImg: require('../assets/users/user-1.jpeg'),\n        messageTime: '4 mins ago',\n        messageText:\n            'Hey there, this is my test for a post of my social app in React Native.',\n    },\n    {\n        id: '2',\n        userName: 'John Doe',\n        userImg: require('../assets/users/user-2.jpeg'),\n        messageTime: '2 hours ago',\n        messageText:\n            'Hey there, this is my test for a post of my social app in React Native.',\n    },\n    {\n        id: '3',\n        userName: 'Ken William',\n        userImg: require('../assets/users/user-3.jpeg'),\n        messageTime: '1 hours ago',\n        messageText:\n            'Hey there, this is my test for a post of my social app in React Native.',\n    },\n    {\n        id: '4',\n        userName: 'Selina Paul',\n        userImg: require('../assets/users/user-4.jpeg'),\n        messageTime: '1 day ago',\n        messageText:\n            'Hey there, this is my test for a post of my social app in React Native.',\n    },\n    {\n        id: '5',\n        userName: 'Christy Alex',\n        userImg: require('../assets/users/user-8.jpeg'),\n        messageTime: '2 days ago',\n        messageText:\n            'Hey there, this is my test for a post of my social app in React Native.',\n    },\n];\n\n\n// const getRecepeintUserData = async () => {\n//     try {\n//         console.log(\"in getUserDataFromDB\");\n//         let userId = auth.currentUser.uid;\n//         console.log(userId);\n//         let response = await fireDB.collection('users').doc(userId).get();\n//         console.log('userData: ', response.data());\n//         let userData = response.data();\n//         setData({\n//             ...userData\n//         })\n\n//     } catch (error) {\n//         console.log('error: ', error);\n\n//     }\n// }\n\nconst ContactListPage = ({navigation, item}) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [allUsers, setAllUsers] = useState([]);\n    const currentUserId = auth.currentUser.uid;\n    const [dataFromState, setData] = useState(usersList)\n\n    const searchName = (input)=> {\n        let data = dataFromState;\n        let searchData = data.filter((item) =>{\n          return item.userName.toLowerCase().includes(input.toLowerCase())\n        });\n        setData(searchData)\n        }\n\n    useEffect(() => {\n        readUser();\n        getAllUsersFromDB();\n    },[]);\n    \n    const readUser = async () => {\n        const user = await AsyncStorage.getItem('user');\n        if(user) {\n            console.log('user: ', JSON.parse(user));\n            setCurrentUser(JSON.parse(user));\n        } else {\n            const getUser = await getUserDetails(currentUserId)\n            await AsyncStorage.setItem('user', JSON.stringify(getUser));\n            setCurrentUser(getUser);\n        }\n    }\n\n    const getAllUsersFromDB = async () => {\n        let tempAllUsers = await getAllUsers();\n        let userList = tempAllUsers.filter((element) => element.id != currentUserId);\n        setAllUsers(userList);\n\n    }\n\n    return(\n        <Container>\n            <View>\n                <TextInput\n                    placeholder=\"Seach Friend\"\n                    onChangeText={(input) => {\n                        searchName(input)\n                    }}\n                    style={{ fontSize: 18 }}\n                />\n\n            </View>\n        <FlatList\n            data={allUsers}\n            renderItem={({ item }) => (\n                <Card onPress={() => navigation.navigate('Chat', { \n                    userId: item.id, \n                    loggedInUserId: currentUserId, \n                    name: currentUser.name, \n                    avatar: currentUser.profileImageUrl, \n                    receipentName: item.name, \n                    receipentProfileImage: item.profileImageUrl \n                    })}>\n                    <UserInfo>\n                        <Image\n                            source={{ uri: item.profileImageUrl }}\n                            style={{ width: 50, height: 50, borderRadius: 100, alignSelf: \"center\" }}\n                        />\n                        <TextSection>\n                            <UserInfoText>\n                                <UserName>{item.name}</UserName>\n                                <PostTime>{item.messageTime}</PostTime>\n                            </UserInfoText>\n                            <MessageText>{item.messageText}</MessageText>\n                        </TextSection>\n                    </UserInfo>\n                </Card>\n            )}\n            keyExtractor={(item,index)=>index.toString()}\n        />\n    </Container>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    button: {\n        alignItems: 'center',\n        marginTop: 25\n    },\n    signIn: {\n        width: 340,\n        height: 40,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 10\n    },\n    textSign: {\n        fontSize: 18,\n        fontWeight: 'bold'\n    }\n});\n\nexport default ContactListPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}