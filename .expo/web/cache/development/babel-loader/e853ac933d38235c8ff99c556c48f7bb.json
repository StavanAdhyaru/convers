{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { auth, fireDB, storage } from \"../firebase\";\nvar userDBRef = fireDB.collection('users');\n\nvar getUserDetails = function _callee(userId) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n            try {\n              userDBRef.doc(userId).get().then(function (doc) {\n                resolve(doc.data());\n              }).catch(function (error) {\n                reject(error);\n              });\n            } catch (error) {\n              console.log('error: ', error);\n            }\n          }));\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar getSingleUserData = function _callee2(userId) {\n  var response;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(userDBRef.doc(userId).get());\n\n        case 3:\n          response = _context2.sent;\n          console.log(\"User data 1\", response.data());\n          return _context2.abrupt(\"return\", response.data());\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nvar setUserStatus = function _callee3(userId, userData, activeOrNot) {\n  return _regeneratorRuntime.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log(\"UserId:\", userId);\n\n          try {\n            userDBRef.doc(userId).update({\n              status: activeOrNot,\n              name: userData.name,\n              contactNumber: userData.contactNumber,\n              email: userData.email,\n              profileImageUrl: userData.profileImageUrl\n            });\n          } catch (error) {\n            console.log('error: ', error);\n          }\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar getAllUsers = function _callee4() {\n  return _regeneratorRuntime.async(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          return _context4.abrupt(\"return\", new Promise(function (resolve, reject) {\n            try {\n              var userData = [];\n              var eachUser = {};\n              userDBRef.get().then(function (snapshot) {\n                snapshot.forEach(function (doc) {\n                  eachUser = doc.data();\n                  eachUser.id = doc.id;\n                  userData.push(eachUser);\n                });\n                resolve(userData);\n              }).catch(function (error) {\n                reject(error);\n              });\n            } catch (error) {\n              console.log('error: ', error);\n            }\n          }));\n\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar getAllUserData = function _callee5() {\n  var allUserData, eachUser, response;\n  return _regeneratorRuntime.async(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          allUserData = [];\n          eachUser = {};\n          response = userDBRef.get().then(function (snapshot) {\n            snapshot.forEach(function (doc) {\n              eachUser = doc.data();\n              eachUser.id = doc.id;\n              console.log(eachUser);\n              allUserData.push(eachUser);\n            });\n          });\n          console.log(allUserData);\n          return _context5.abrupt(\"return\", allUserData);\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n\n        case 11:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nexport { getUserDetails, getAllUsers, setUserStatus, getSingleUserData, getAllUserData };","map":{"version":3,"names":["auth","fireDB","storage","userDBRef","collection","getUserDetails","userId","Promise","resolve","reject","doc","get","then","data","catch","error","console","log","getSingleUserData","response","setUserStatus","userData","activeOrNot","update","status","name","contactNumber","email","profileImageUrl","getAllUsers","eachUser","snapshot","forEach","id","push","getAllUserData","allUserData"],"sources":["/Users/stavan/Documents/End_Sem_Project/API/user.js"],"sourcesContent":["import {auth, fireDB, storage} from '../firebase';\n\nconst userDBRef = fireDB.collection('users');\n\nconst getUserDetails = async (userId) => {\n    return new Promise((resolve, reject) => {\n        try {\n            userDBRef.doc(userId).get().then((doc) => {\n                resolve(doc.data());\n            }).catch((error) => {\n                reject(error);\n            })\n            \n        } catch (error) {\n            console.log('error: ', error);\n            \n        }\n    })\n}\n\nconst getSingleUserData = async (userId) => {\n    try{\n        let response = await userDBRef.doc(userId).get();\n        console.log(\"User data 1\",response.data());\n        return response.data()\n    }catch(error){\n        console.log(error);\n    }\n}\n\nconst setUserStatus = async (userId,userData,activeOrNot) => {\n\n    console.log(\"UserId:\",userId)\n    try{\n        userDBRef.doc(userId).update({\n            status: activeOrNot,\n            name: userData.name,\n            contactNumber: userData.contactNumber,\n            email: userData.email,\n            profileImageUrl: userData.profileImageUrl\n\n        });\n    }catch (error){\n        console.log('error: ',error);\n    }\n}\n\nconst getAllUsers = async () => {\n    return new Promise((resolve, reject) => {\n        try {\n            let userData = [];\n            let eachUser = {};\n            userDBRef.get().then((snapshot) => {\n                snapshot.forEach((doc) => {\n                    eachUser = doc.data();\n                    eachUser.id = doc.id;\n                    userData.push(eachUser);\n                    // console.log('userData: ', userData);\n                })\n                resolve(userData);\n\n            }).catch((error) => {\n                reject(error);\n            })\n            \n        } catch (error) {\n            console.log('error: ', error);\n            \n        }\n    })\n}\n\nconst getAllUserData = async () => {\n    try{\n        let allUserData = [];\n        let eachUser = {};\n        let response = userDBRef.get().then((snapshot) => {\n            snapshot.forEach((doc) => {\n                eachUser = doc.data();\n                eachUser.id = doc.id;\n                console.log(eachUser);\n                allUserData.push(eachUser);\n            })\n        })\n        console.log(allUserData);\n        return allUserData;\n    }catch(error){\n        console.log(error);\n    }\n}\n\nexport{ getUserDetails, getAllUsers, setUserStatus, getSingleUserData,getAllUserData }"],"mappings":"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"},"metadata":{},"sourceType":"module"}