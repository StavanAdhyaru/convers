{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useEffect, useCallback, useState, useLayoutEffect } from 'react';\nimport { Container, Card, UserInfo, UserImgWrapper, UserImg, UserInfoText, UserName, PostTime, MessageText, TextSection } from \"./Styles/MessageStyles\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Menu } from \"react-native-web/dist/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar usersList = [{\n  id: '1',\n  userName: 'Stavan Doe',\n  userImg: require(\"../assets/users/user-1.jpeg\"),\n  messageTime: '4 mins ago',\n  messageText: 'Hey there, this is my test for a post of my social app in React Native.'\n}, {\n  id: '2',\n  userName: 'John Doe',\n  userImg: require(\"../assets/users/user-2.jpeg\"),\n  messageTime: '2 hours ago',\n  messageText: 'Hey there, this is my test for a post of my social app in React Native.'\n}, {\n  id: '3',\n  userName: 'Ken William',\n  userImg: require(\"../assets/users/user-3.jpeg\"),\n  messageTime: '1 hours ago',\n  messageText: 'Hey there, this is my test for a post of my social app in React Native.'\n}, {\n  id: '4',\n  userName: 'Selina Paul',\n  userImg: require(\"../assets/users/user-4.jpeg\"),\n  messageTime: '1 day ago',\n  messageText: 'Hey there, this is my test for a post of my social app in React Native.'\n}, {\n  id: '5',\n  userName: 'Christy Alex',\n  userImg: require(\"../assets/users/user-8.jpeg\"),\n  messageTime: '2 days ago',\n  messageText: 'Hey there, this is my test for a post of my social app in React Native.'\n}];\n\nvar getRecepeintUserData = function _callee() {\n  var userId, response, userData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log(\"in getUserDataFromDB\");\n          userId = auth.currentUser.uid;\n          console.log(userId);\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(fireDB.collection('users').doc(userId).get());\n\n        case 6:\n          response = _context.sent;\n          console.log('userData: ', response.data());\n          userData = response.data();\n          setData(_objectSpread({}, userData));\n          _context.next = 15;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('error: ', _context.t0);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 12]], Promise);\n};\n\nvar ContactListPage = function ContactListPage(_ref) {\n  var navigation = _ref.navigation,\n      item = _ref.item;\n\n  var _useState = useState(usersList),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataFromState = _useState2[0],\n      setData = _useState2[1];\n\n  var searchName = function searchName(input) {\n    var data = dataFromState;\n    var searchData = data.filter(function (item) {\n      return item.userName.toLowerCase().includes(input.toLowerCase());\n    });\n    setData(searchData);\n  };\n\n  return _jsxs(Container, {\n    children: [_jsx(View, {\n      children: _jsx(TextInput, {\n        placeholder: \"Seach Friend\",\n        onChangeText: function onChangeText(input) {\n          searchName(input);\n        },\n        style: {\n          fontSize: 18\n        }\n      })\n    }), _jsx(FlatList, {\n      data: dataFromState,\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(Card, {\n          onPress: function onPress() {\n            return navigation.navigate('Chat', {\n              receipentName: item.userName,\n              receipentProfileImage: item.userImg\n            });\n          },\n          children: _jsxs(UserInfo, {\n            children: [_jsx(UserImgWrapper, {\n              children: _jsx(UserImg, {\n                source: item.userImg\n              })\n            }), _jsxs(TextSection, {\n              children: [_jsxs(UserInfoText, {\n                children: [_jsx(UserName, {\n                  children: item.userName\n                }), _jsx(PostTime, {\n                  children: item.messageTime\n                })]\n              }), _jsx(MessageText, {\n                children: item.messageText\n              })]\n            })]\n          })\n        });\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    alignItems: 'center',\n    marginTop: 25\n  },\n  signIn: {\n    width: 340,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10\n  },\n  textSign: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nexport default ContactListPage;","map":{"version":3,"names":["React","useEffect","useCallback","useState","useLayoutEffect","Container","Card","UserInfo","UserImgWrapper","UserImg","UserInfoText","UserName","PostTime","MessageText","TextSection","Menu","usersList","id","userName","userImg","require","messageTime","messageText","getRecepeintUserData","console","log","userId","auth","currentUser","uid","fireDB","collection","doc","get","response","data","userData","setData","ContactListPage","navigation","item","dataFromState","searchName","input","searchData","filter","toLowerCase","includes","fontSize","index","toString","navigate","receipentName","receipentProfileImage","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","button","marginTop","signIn","width","height","borderRadius","textSign","fontWeight"],"sources":["/Users/stavan/Documents/End_Sem_Project/screens/ContactListPage.js"],"sourcesContent":["import React, { useEffect, useCallback, useState, useLayoutEffect } from 'react';\nimport {\n    Container,\n    Card,\n    UserInfo,\n    UserImgWrapper,\n    UserImg,\n    UserInfoText,\n    UserName,\n    PostTime,\n    MessageText,\n    TextSection,\n} from './Styles/MessageStyles';\nimport {\n    View,\n    Text,\n    TouchableOpacity,\n    TextInput,\n    Platform,\n    StyleSheet,\n    StatusBar,\n    Alert,\n    Button,\n    Dimensions, Image, FlatList, Menu\n} from 'react-native';\nconst usersList = [\n    {\n        id: '1',\n        userName: 'Stavan Doe',\n        userImg: require('../assets/users/user-1.jpeg'),\n        messageTime: '4 mins ago',\n        messageText:\n            'Hey there, this is my test for a post of my social app in React Native.',\n    },\n    {\n        id: '2',\n        userName: 'John Doe',\n        userImg: require('../assets/users/user-2.jpeg'),\n        messageTime: '2 hours ago',\n        messageText:\n            'Hey there, this is my test for a post of my social app in React Native.',\n    },\n    {\n        id: '3',\n        userName: 'Ken William',\n        userImg: require('../assets/users/user-3.jpeg'),\n        messageTime: '1 hours ago',\n        messageText:\n            'Hey there, this is my test for a post of my social app in React Native.',\n    },\n    {\n        id: '4',\n        userName: 'Selina Paul',\n        userImg: require('../assets/users/user-4.jpeg'),\n        messageTime: '1 day ago',\n        messageText:\n            'Hey there, this is my test for a post of my social app in React Native.',\n    },\n    {\n        id: '5',\n        userName: 'Christy Alex',\n        userImg: require('../assets/users/user-8.jpeg'),\n        messageTime: '2 days ago',\n        messageText:\n            'Hey there, this is my test for a post of my social app in React Native.',\n    },\n];\n\n\nconst getRecepeintUserData = async () => {\n    try {\n        console.log(\"in getUserDataFromDB\");\n        let userId = auth.currentUser.uid;\n        console.log(userId);\n        let response = await fireDB.collection('users').doc(userId).get();\n        console.log('userData: ', response.data());\n        let userData = response.data();\n        setData({\n            ...userData\n        })\n\n    } catch (error) {\n        console.log('error: ', error);\n\n    }\n}\n\nconst ContactListPage = ({ navigation, item }) => {\n\n    const [dataFromState, setData] = useState(usersList)\n\n    const searchName = (input)=> {\n        let data = dataFromState;\n        let searchData = data.filter((item) =>{\n          return item.userName.toLowerCase().includes(input.toLowerCase())\n        });\n        setData(searchData)\n        }\n\n    return (\n\n        <Container>\n            <View>\n                <TextInput\n                    placeholder=\"Seach Friend\"\n                    onChangeText={(input) => {\n                        searchName(input)\n                    }}\n                    style={{ fontSize: 18 }}\n                />\n\n            </View>\n            <FlatList\n                data={dataFromState}\n                // keyExtractor={item => item.id}\n                keyExtractor = {(item,index)=>index.toString()}\n                renderItem={({item}) => (\n                    <Card onPress={() => navigation.navigate('Chat', {receipentName: item.userName,receipentProfileImage: item.userImg})}>\n                      <UserInfo>\n                        <UserImgWrapper>\n                          <UserImg source={item.userImg} />\n                        </UserImgWrapper>\n                        <TextSection>\n                          <UserInfoText>\n                            <UserName>{item.userName}</UserName>\n                            <PostTime>{item.messageTime}</PostTime>\n                          </UserInfoText>\n                          <MessageText>{item.messageText}</MessageText>\n                        </TextSection>\n                      </UserInfo>\n                    </Card>\n                  )}\n                />\n              </Container>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    button: {\n        alignItems: 'center',\n        marginTop: 25\n    },\n    signIn: {\n        width: 340,\n        height: 40,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 10\n    },\n    textSign: {\n        fontSize: 18,\n        fontWeight: 'bold'\n    }\n});\n\nexport default ContactListPage;"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,QAAxC,EAAkDC,eAAlD,QAAyE,OAAzE;AACA,SACIC,SADJ,EAEIC,IAFJ,EAGIC,QAHJ,EAIIC,cAJJ,EAKIC,OALJ,EAMIC,YANJ,EAOIC,QAPJ,EAQIC,QARJ,EASIC,WATJ,EAUIC,WAVJ;;;;;;;;;;;;;SAsBiCC,I;;;AAEjC,IAAMC,SAAS,GAAG,CACd;EACIC,EAAE,EAAE,GADR;EAEIC,QAAQ,EAAE,YAFd;EAGIC,OAAO,EAAEC,OAAO,+BAHpB;EAIIC,WAAW,EAAE,YAJjB;EAKIC,WAAW,EACP;AANR,CADc,EASd;EACIL,EAAE,EAAE,GADR;EAEIC,QAAQ,EAAE,UAFd;EAGIC,OAAO,EAAEC,OAAO,+BAHpB;EAIIC,WAAW,EAAE,aAJjB;EAKIC,WAAW,EACP;AANR,CATc,EAiBd;EACIL,EAAE,EAAE,GADR;EAEIC,QAAQ,EAAE,aAFd;EAGIC,OAAO,EAAEC,OAAO,+BAHpB;EAIIC,WAAW,EAAE,aAJjB;EAKIC,WAAW,EACP;AANR,CAjBc,EAyBd;EACIL,EAAE,EAAE,GADR;EAEIC,QAAQ,EAAE,aAFd;EAGIC,OAAO,EAAEC,OAAO,+BAHpB;EAIIC,WAAW,EAAE,WAJjB;EAKIC,WAAW,EACP;AANR,CAzBc,EAiCd;EACIL,EAAE,EAAE,GADR;EAEIC,QAAQ,EAAE,cAFd;EAGIC,OAAO,EAAEC,OAAO,+BAHpB;EAIIC,WAAW,EAAE,YAJjB;EAKIC,WAAW,EACP;AANR,CAjCc,CAAlB;;AA4CA,IAAMC,oBAAoB,GAAG;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAErBC,OAAO,CAACC,GAAR,CAAY,sBAAZ;UACIC,MAHiB,GAGRC,IAAI,CAACC,WAAL,CAAiBC,GAHT;UAIrBL,OAAO,CAACC,GAAR,CAAYC,MAAZ;UAJqB;UAAA,iCAKAI,MAAM,CAACC,UAAP,CAAkB,OAAlB,EAA2BC,GAA3B,CAA+BN,MAA/B,EAAuCO,GAAvC,EALA;;QAAA;UAKjBC,QALiB;UAMrBV,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BS,QAAQ,CAACC,IAAT,EAA1B;UACIC,QAPiB,GAONF,QAAQ,CAACC,IAAT,EAPM;UAQrBE,OAAO,mBACAD,QADA,EAAP;UARqB;UAAA;;QAAA;UAAA;UAAA;UAarBZ,OAAO,CAACC,GAAR,CAAY,SAAZ;;QAbqB;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAA7B;;AAkBA,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,OAA0B;EAAA,IAAvBC,UAAuB,QAAvBA,UAAuB;EAAA,IAAXC,IAAW,QAAXA,IAAW;;EAE9C,gBAAiCrC,QAAQ,CAACa,SAAD,CAAzC;EAAA;EAAA,IAAOyB,aAAP;EAAA,IAAsBJ,OAAtB;;EAEA,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAU;IACzB,IAAIR,IAAI,GAAGM,aAAX;IACA,IAAIG,UAAU,GAAGT,IAAI,CAACU,MAAL,CAAY,UAACL,IAAD,EAAS;MACpC,OAAOA,IAAI,CAACtB,QAAL,CAAc4B,WAAd,GAA4BC,QAA5B,CAAqCJ,KAAK,CAACG,WAAN,EAArC,CAAP;IACD,CAFgB,CAAjB;IAGAT,OAAO,CAACO,UAAD,CAAP;EACC,CANL;;EAQA,OAEI,MAAC,SAAD;IAAA,WACI,KAAC,IAAD;MAAA,UACI,KAAC,SAAD;QACI,WAAW,EAAC,cADhB;QAEI,YAAY,EAAE,sBAACD,KAAD,EAAW;UACrBD,UAAU,CAACC,KAAD,CAAV;QACH,CAJL;QAKI,KAAK,EAAE;UAAEK,QAAQ,EAAE;QAAZ;MALX;IADJ,EADJ,EAWI,KAAC,QAAD;MACI,IAAI,EAAEP,aADV;MAGI,YAAY,EAAI,sBAACD,IAAD,EAAMS,KAAN;QAAA,OAAcA,KAAK,CAACC,QAAN,EAAd;MAAA,CAHpB;MAII,UAAU,EAAE;QAAA,IAAEV,IAAF,SAAEA,IAAF;QAAA,OACR,KAAC,IAAD;UAAM,OAAO,EAAE;YAAA,OAAMD,UAAU,CAACY,QAAX,CAAoB,MAApB,EAA4B;cAACC,aAAa,EAAEZ,IAAI,CAACtB,QAArB;cAA8BmC,qBAAqB,EAAEb,IAAI,CAACrB;YAA1D,CAA5B,CAAN;UAAA,CAAf;UAAA,UACE,MAAC,QAAD;YAAA,WACE,KAAC,cAAD;cAAA,UACE,KAAC,OAAD;gBAAS,MAAM,EAAEqB,IAAI,CAACrB;cAAtB;YADF,EADF,EAIE,MAAC,WAAD;cAAA,WACE,MAAC,YAAD;gBAAA,WACE,KAAC,QAAD;kBAAA,UAAWqB,IAAI,CAACtB;gBAAhB,EADF,EAEE,KAAC,QAAD;kBAAA,UAAWsB,IAAI,CAACnB;gBAAhB,EAFF;cAAA,EADF,EAKE,KAAC,WAAD;gBAAA,UAAcmB,IAAI,CAAClB;cAAnB,EALF;YAAA,EAJF;UAAA;QADF,EADQ;MAAA;IAJhB,EAXJ;EAAA,EAFJ;AAoCH,CAhDD;;AAkDA,IAAMgC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC7BC,SAAS,EAAE;IACPC,IAAI,EAAE,CADC;IAEPC,eAAe,EAAE,MAFV;IAGPC,UAAU,EAAE,QAHL;IAIPC,cAAc,EAAE;EAJT,CADkB;EAO7BC,MAAM,EAAE;IACJF,UAAU,EAAE,QADR;IAEJG,SAAS,EAAE;EAFP,CAPqB;EAW7BC,MAAM,EAAE;IACJC,KAAK,EAAE,GADH;IAEJC,MAAM,EAAE,EAFJ;IAGJL,cAAc,EAAE,QAHZ;IAIJD,UAAU,EAAE,QAJR;IAKJO,YAAY,EAAE;EALV,CAXqB;EAkB7BC,QAAQ,EAAE;IACNpB,QAAQ,EAAE,EADJ;IAENqB,UAAU,EAAE;EAFN;AAlBmB,CAAlB,CAAf;AAwBA,eAAe/B,eAAf"},"metadata":{},"sourceType":"module"}