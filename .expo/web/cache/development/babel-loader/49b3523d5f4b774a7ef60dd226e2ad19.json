{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as Contacts from 'expo-contacts';\nimport { getAllUserData, getAllUsers } from \"./user\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar getContactslist = function _callee() {\n  var _await$Contacts$reque, status, _await$Contacts$getCo, data, contact, searchData;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Contacts.requestPermissionsAsync());\n\n        case 2:\n          _await$Contacts$reque = _context.sent;\n          status = _await$Contacts$reque.status;\n\n          if (!(status === 'granted')) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(Contacts.getContactsAsync({\n            fields: [Contacts.Fields.PhoneNumbers, Contacts.Fields.FirstName]\n          }));\n\n        case 7:\n          _await$Contacts$getCo = _context.sent;\n          data = _await$Contacts$getCo.data;\n\n          if (data.length > 0) {\n            contact = data[0];\n            console.log(data.length);\n          }\n\n          searchData = data.filter(function (d) {\n            return d.name.includes(\"Nikki\");\n          });\n          console.log(\"Search Data\", searchData);\n          checkWithFirebaseUsers(data);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar checkWithFirebaseUsers = function _callee2(data) {\n  var allUsers, commonUserList, i, j;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(getAllUsers());\n\n        case 2:\n          allUsers = _context2.sent;\n          console.log(\"From contacts.js users list from firebase \", allUsers);\n          commonUserList = [];\n\n          for (i = 0; i < data.length; i++) {\n            for (j = 0; j < allUsers.length; j++) {\n              if (data[i].phoneNumbers[0].number == allUsers[j].conatactNumber) {\n                commonUserList.push(allUsers[j]);\n              }\n            }\n          }\n\n          console.log(commonUserList.length);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport { getContactslist };","map":{"version":3,"names":["Contacts","getAllUserData","getAllUsers","AsyncStorage","getContactslist","requestPermissionsAsync","status","getContactsAsync","fields","Fields","PhoneNumbers","FirstName","data","length","contact","console","log","searchData","filter","d","name","includes","checkWithFirebaseUsers","allUsers","commonUserList","i","j","phoneNumbers","number","conatactNumber","push"],"sources":["/Users/stavan/Documents/End_Sem_Project/API/contacts.js"],"sourcesContent":["import * as Contacts from 'expo-contacts';\nimport {getAllUserData, getAllUsers} from './user';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst getContactslist = async () => {\n    const { status } = await Contacts.requestPermissionsAsync();\n    if (status === 'granted') {\n        const { data } = await Contacts.getContactsAsync({\n            fields: [Contacts.Fields.PhoneNumbers, Contacts.Fields.FirstName],\n        });\n\n        if (data.length > 0) {\n            const contact = data[0];\n            console.log(data.length);\n            \n            // console.log(\"Contacts:\",contact);\n        }\n\n        const searchData = data.filter(d => d.name.includes(\"Nikki\"));\n        console.log(\"Search Data\",searchData);\n        checkWithFirebaseUsers(data);\n\n\n\n    }\n}\n\nconst checkWithFirebaseUsers = async (data) => {\n    let allUsers = await getAllUsers();\n    console.log(\"From contacts.js users list from firebase \",allUsers);\n    let commonUserList = []\n    \n\n\n    for(let i=0;i<data.length;i++){\n        for(let j=0;j<allUsers.length;j++){\n            if(data[i].phoneNumbers[0].number == allUsers[j].conatactNumber){\n                commonUserList.push(allUsers[j]);\n            }\n        }\n    }\n\n    console.log(commonUserList.length);\n}\n\nexport { getContactslist };"],"mappings":";AAAA,OAAO,KAAKA,QAAZ,MAA0B,eAA1B;AACA,SAAQC,cAAR,EAAwBC,WAAxB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;AAEA,IAAMC,eAAe,GAAG;EAAA;;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACKJ,QAAQ,CAACK,uBAAT,EADL;;QAAA;UAAA;UACZC,MADY,yBACZA,MADY;;UAAA,MAEhBA,MAAM,KAAK,SAFK;YAAA;YAAA;UAAA;;UAAA;UAAA,iCAGON,QAAQ,CAACO,gBAAT,CAA0B;YAC7CC,MAAM,EAAE,CAACR,QAAQ,CAACS,MAAT,CAAgBC,YAAjB,EAA+BV,QAAQ,CAACS,MAAT,CAAgBE,SAA/C;UADqC,CAA1B,CAHP;;QAAA;UAAA;UAGRC,IAHQ,yBAGRA,IAHQ;;UAOhB,IAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;YACXC,OADW,GACDF,IAAI,CAAC,CAAD,CADH;YAEjBG,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACC,MAAjB;UAGH;;UAEKI,UAdU,GAcGL,IAAI,CAACM,MAAL,CAAY,UAAAC,CAAC;YAAA,OAAIA,CAAC,CAACC,IAAF,CAAOC,QAAP,CAAgB,OAAhB,CAAJ;UAAA,CAAb,CAdH;UAehBN,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BC,UAA1B;UACAK,sBAAsB,CAACV,IAAD,CAAtB;;QAhBgB;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAxB;;AAuBA,IAAMU,sBAAsB,GAAG,kBAAOV,IAAP;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACNV,WAAW,EADL;;QAAA;UACvBqB,QADuB;UAE3BR,OAAO,CAACC,GAAR,CAAY,4CAAZ,EAAyDO,QAAzD;UACIC,cAHuB,GAGN,EAHM;;UAO3B,KAAQC,CAAR,GAAU,CAAV,EAAYA,CAAC,GAACb,IAAI,CAACC,MAAnB,EAA0BY,CAAC,EAA3B,EAA8B;YAC1B,KAAQC,CAAR,GAAU,CAAV,EAAYA,CAAC,GAACH,QAAQ,CAACV,MAAvB,EAA8Ba,CAAC,EAA/B,EAAkC;cAC9B,IAAGd,IAAI,CAACa,CAAD,CAAJ,CAAQE,YAAR,CAAqB,CAArB,EAAwBC,MAAxB,IAAkCL,QAAQ,CAACG,CAAD,CAAR,CAAYG,cAAjD,EAAgE;gBAC5DL,cAAc,CAACM,IAAf,CAAoBP,QAAQ,CAACG,CAAD,CAA5B;cACH;YACJ;UACJ;;UAEDX,OAAO,CAACC,GAAR,CAAYQ,cAAc,CAACX,MAA3B;;QAf2B;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAA/B;;AAkBA,SAAST,eAAT"},"metadata":{},"sourceType":"module"}