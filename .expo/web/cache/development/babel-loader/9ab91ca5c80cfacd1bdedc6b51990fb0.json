{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { auth, fireDB } from \"../firebase\";\nimport { useState, useEffect, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport SettingsPage from \"./SettingsPage\";\nimport ContactListPage from \"./ContactListPage\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Login from \"./Login\";\nimport Chat from \"./Chat\";\nimport ChangePasswordScreen from \"./ChangePassword\";\nimport Registration from \"./registration\";\nimport ForgotPasswordPage from \"./ForgotPasswordPage\";\nimport { setUserStatus, getSingleUserData } from \"../API/user\";\nimport { UserImg } from \"./Styles/MessageStyles\";\nimport { getContactslist } from \"../API/contacts\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get('screen'),\n    height = _Dimensions$get.height;\n\nvar height_logo = height * 0.28;\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\n\nvar HomePage = function HomePage(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var appState = useRef(AppState.currentState);\n\n  var _useState = useState(appState.current),\n      _useState2 = _slicedToArray(_useState, 2),\n      appStateVisible = _useState2[0],\n      setAppStateVisible = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      contacts = _useState4[0],\n      setContacts = _useState4[1];\n\n  var _useState5 = useState({\n    name: '',\n    email: '',\n    contactNumber: '',\n    profileImageUrl: '',\n    status: true\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentUserData = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentUserId = _useState8[0],\n      setId = _useState8[1];\n\n  useEffect(function () {\n    console.log(\"in useEffect\");\n    getContactslist();\n    getUserDataFromDB();\n    var subscription = AppState.addEventListener(\"change\", function (nextAppState) {\n      if (appState.current.match(/inactive|background/) && nextAppState === \"active\") {\n        console.log(\"App has come to the foreground!\");\n        setUserStatus;\n      }\n\n      appState.current = nextAppState;\n      setAppStateVisible(appState.current);\n      console.log(\"AppState\", appState.current);\n\n      if (appState.current == \"active\") {\n        setUserStatus(currentUserId, currentUserData, true);\n      } else {\n        setUserStatus(currentUserId, currentUserData, false);\n      }\n    });\n  }, []);\n\n  var getUserDataFromDB = function _callee() {\n    var userId, userData;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              console.log(\"in getUserDataFromDB\");\n              userId = auth.currentUser.uid;\n              console.log(userId);\n              userData = getSingleUserData();\n              setData(_objectSpread({}, userData));\n            } catch (error) {\n              console.log('error: ', error);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(NavigationContainer, {\n    independent: true,\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Tab\",\n        component: TabStackNavigator,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        options: {\n          headerShown: false\n        },\n        name: \"Log\",\n        component: Login\n      }), _jsx(Stack.Screen, {\n        options: {\n          headerShown: false\n        },\n        name: \"CP\",\n        component: ChangePasswordScreen\n      }), _jsx(Stack.Screen, {\n        options: {\n          headerShown: false\n        },\n        name: \"Home\",\n        component: HomePage\n      }), _jsx(Stack.Screen, {\n        option: {\n          headerStyle: {\n            height: 70\n          }\n        },\n        initialParams: {\n          currentUserData: currentUserData,\n          currentUserId: currentUserId\n        },\n        name: \"Chat\",\n        component: Chat\n      }), _jsx(Stack.Screen, {\n        options: {\n          headerShown: false\n        },\n        name: \"Register\",\n        component: Registration\n      }), _jsx(Stack.Screen, {\n        options: {\n          headerShown: false\n        },\n        name: \"ForgotPassword\",\n        component: ForgotPasswordPage\n      })]\n    })\n  });\n};\n\nvar TabStackNavigator = function TabStackNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref2) {\n      var route = _ref2.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused,\n              color = _ref3.color,\n              size = _ref3.size;\n          var iconName;\n\n          if (route.name === 'ContactListPage') {\n            iconName = focused ? 'chatbubbles' : 'chatbubbles-outline';\n          } else if (route.name === 'SettingsPage') {\n            iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n          }\n\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: '#009387',\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      options: {\n        title: 'Chats',\n        headerTintColor: '#009387',\n        headerBackButtonMenuEnabled: true\n      },\n      name: \"ContactListPage\",\n      component: ContactListPage\n    }), _jsx(Tab.Screen, {\n      options: {\n        headerShown: false,\n        title: 'Settings',\n        headerBackButtonMenuEnabled: true,\n        topBar: {\n          backButton: {}\n        }\n      },\n      name: \"SettingsPage\",\n      component: SettingsPage\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    alignItems: 'center',\n    marginTop: 25\n  },\n  signIn: {\n    width: 340,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10\n  },\n  textSign: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nexport default HomePage;","map":{"version":3,"names":["auth","fireDB","useState","useEffect","useRef","NavigationContainer","createBottomTabNavigator","SettingsPage","ContactListPage","Ionicons","createNativeStackNavigator","Login","Chat","ChangePasswordScreen","Registration","ForgotPasswordPage","setUserStatus","getSingleUserData","UserImg","getContactslist","Dimensions","get","height","height_logo","Tab","Stack","HomePage","navigation","route","appState","AppState","currentState","current","appStateVisible","setAppStateVisible","contacts","setContacts","name","email","contactNumber","profileImageUrl","status","currentUserData","setData","currentUserId","setId","console","log","getUserDataFromDB","subscription","addEventListener","nextAppState","match","userId","currentUser","uid","userData","error","TabStackNavigator","headerShown","headerStyle","tabBarIcon","focused","color","size","iconName","tabBarActiveTintColor","tabBarInactiveTintColor","title","headerTintColor","headerBackButtonMenuEnabled","topBar","backButton","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","button","marginTop","signIn","width","borderRadius","textSign","fontSize","fontWeight"],"sources":["/Users/stavan/Documents/End_Sem_Project/Screens/HomePage.js"],"sourcesContent":["import { auth, fireDB } from \"../firebase\";\nimport { useState, useEffect,useRef } from 'react';\nimport {\n    StyleSheet,\n    Dimensions,AppState\n} from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport SettingsPage from './SettingsPage';\nimport ContactListPage from './ContactListPage';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Login from './Login';\nimport Chat from './Chat';\nimport ChangePasswordScreen from './ChangePassword';\nimport Registration from './registration';\nimport ForgotPasswordPage from './ForgotPasswordPage';\nimport {setUserStatus,getSingleUserData} from '../API/user'\nimport { UserImg } from \"./Styles/MessageStyles\";\nimport {getContactslist} from \"../API/contacts\";\n\nconst { height } = Dimensions.get('screen');\nconst height_logo = height * 0.28;\nconst Tab = createBottomTabNavigator();\nconst Stack = createNativeStackNavigator();\n\n\nconst HomePage = ({ navigation,route }) => {\n\n    const appState = useRef(AppState.currentState);\n    const [appStateVisible, setAppStateVisible] = useState(appState.current);\n    const [contacts, setContacts] = useState([]);\n\n\n\n\n    const [currentUserData, setData] = useState({\n        name: '',\n        email: '',\n        contactNumber: '',\n        profileImageUrl: '',\n        status: true\n    });\n    const [currentUserId,setId] = useState('')\n    useEffect( () => {\n        console.log(\"in useEffect\");\n        getContactslist();\n        getUserDataFromDB();\n\n        const subscription = AppState.addEventListener(\"change\", nextAppState => {\n            if (\n              appState.current.match(/inactive|background/) &&\n              nextAppState === \"active\"\n            ) {\n              console.log(\"App has come to the foreground!\");\n              setUserStatus\n            }\n      \n            appState.current = nextAppState;\n            setAppStateVisible(appState.current);\n            console.log(\"AppState\", appState.current);\n            \n            if(appState.current == \"active\"){\n                setUserStatus(currentUserId,currentUserData,true)\n            }else{\n                setUserStatus(currentUserId,currentUserData,false)\n            }\n\n          });\n\n          \n\n        \n    }, [])\n\n\n\n    const getUserDataFromDB = async () => {\n        try {\n            console.log(\"in getUserDataFromDB\");\n            let userId = auth.currentUser.uid;\n            console.log(userId);\n            // setId(userId);\n            // let response = await fireDB.collection('users').doc(userId).get();\n            // console.log('userData: ', response.data());\n            // let userData = response.data();\n            let userData = getSingleUserData();\n            setData({\n                ...userData\n            })\n\n            \n        } catch (error) {\n            console.log('error: ', error);\n        }\n    } \n   \n    return (\n        <NavigationContainer independent={true}>\n            <Stack.Navigator>\n                <Stack.Screen\n                    name=\"Tab\"\n                    component={TabStackNavigator}\n                    options={{ headerShown: false }} />\n                <Stack.Screen options={{headerShown:false}} name=\"Log\" component={Login} />\n                <Stack.Screen options={{headerShown:false}} name=\"CP\" component={ChangePasswordScreen}/>\n                <Stack.Screen options={{headerShown:false}} name=\"Home\" component={HomePage}/>\n                <Stack.Screen option={{headerStyle: {height: 70}}} initialParams={{currentUserData: currentUserData,currentUserId: currentUserId}} name=\"Chat\" component={Chat}/>\n                <Stack.Screen options={{headerShown:false}} name=\"Register\" component={Registration}/>\n                <Stack.Screen options={{headerShown:false}} name=\"ForgotPassword\" component={ForgotPasswordPage}/>\n            </Stack.Navigator>\n        </NavigationContainer>\n    );\n}\n\nconst TabStackNavigator = () => {\n    \n\n    return (\n        <Tab.Navigator\n            screenOptions={({ route }) => ({\n                tabBarIcon: ({ focused, color, size }) => {\n                    let iconName;\n\n                    if (route.name === 'ContactListPage') {\n                        iconName = focused\n                            ? 'chatbubbles'\n                            : 'chatbubbles-outline';\n                    } else if (route.name === 'SettingsPage') {\n                        iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n                    }\n\n                    // You can return any component that you like here!\n                    return <Ionicons name={iconName} size={size} color={color} />;\n                },\n                tabBarActiveTintColor: '#009387',\n                tabBarInactiveTintColor: 'gray',\n            })}>\n            <Tab.Screen  options={{title:'Chats', headerTintColor:'#009387',headerBackButtonMenuEnabled:true}} name=\"ContactListPage\" component={ContactListPage} />\n            <Tab.Screen  options={{headerShown:false, title:'Settings',headerBackButtonMenuEnabled:true,topBar:{\n                backButton:{},\n            }}} name=\"SettingsPage\" component={SettingsPage} />\n        </Tab.Navigator>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    button: {\n        alignItems: 'center',\n        marginTop: 25\n    },\n    signIn: {\n        width: 340,\n        height: 40,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 10\n    },\n    textSign: {\n        fontSize: 18,\n        fontWeight: 'bold'\n    }\n});\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}