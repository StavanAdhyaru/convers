{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useEffect, useCallback, useState, useLayoutEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { UserImgWrapper, UserImg } from \"./Styles/MessageStyles\";\nimport { Avatar } from 'react-native-elements';\nimport { signOut } from 'firebase/auth';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { getChat, storeChat } from \"../API/chat\";\nimport { getUserDetails } from \"../API/user\";\nimport { auth } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Chat = function Chat(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var _route$params = route.params,\n      userId = _route$params.userId,\n      name = _route$params.name,\n      avatar = _route$params.avatar;\n  var loggedInUserId = auth.currentUser.uid;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loggedInUser = _useState6[0],\n      setLoggedInUser = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      chatId = _useState8[0],\n      setChatId = _useState8[1];\n\n  var arr = [];\n  var STORAGE_KEY = \"CHAT_DATA\";\n  var _route$params2 = route.params,\n      receipentName = _route$params2.receipentName,\n      receipentProfileImage = _route$params2.receipentProfileImage,\n      currentuserId = _route$params2.currentuserId;\n  var currentUserData = route.params.currentUserData;\n  useEffect(function () {\n    getMessages();\n  }, []);\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: receipentName,\n      headerLeft: function headerLeft() {\n        return _jsx(View, {\n          style: {\n            marginLeft: 20\n          },\n          children: _jsx(UserImgWrapper, {\n            children: _jsx(UserImg, {\n              source: {\n                uri: receipentProfileImage\n              }\n            })\n          })\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsx(TouchableOpacity, {\n          style: {\n            marginRight: 10\n          },\n          children: _jsx(Text, {})\n        });\n      }\n    });\n  }, [navigation]);\n\n  var getMessages = function _callee() {\n    var _userDetails;\n\n    var loggedInUser, loggedInUserChats, otherUser, otherUserChats, chatId, allMessages, userDetails, result;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getUserDetails(loggedInUserId));\n\n          case 2:\n            loggedInUser = _context.sent;\n            console.log('loggedInUser: ', loggedInUser);\n            setLoggedInUser(loggedInUser);\n            loggedInUserChats = loggedInUser.chatIds;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(getUserDetails(userId));\n\n          case 8:\n            otherUser = _context.sent;\n            otherUserChats = otherUser.chatIds;\n            chatId = loggedInUserChats.filter(function (value) {\n              return otherUserChats.includes(value);\n            })[0];\n            console.log('chatId: ', chatId);\n            setChatId(chatId);\n            _context.next = 15;\n            return _regeneratorRuntime.awrap(getChat(chatId));\n\n          case 15:\n            allMessages = _context.sent;\n            console.log('allMessages: ', allMessages);\n            userDetails = (_userDetails = {}, _defineProperty(_userDetails, loggedInUserId, {\n              name: loggedInUser.name,\n              avatar: loggedInUser.profileImageUrl\n            }), _defineProperty(_userDetails, userId, {\n              name: otherUser.name,\n              avatar: otherUser.profileImageUrl\n            }), _userDetails);\n            result = allMessages.forEach(function (message) {\n              message[\"user\"] = _objectSpread({\n                _id: message.userId\n              }, userDetails[message.userId]);\n              delete message.userId;\n            });\n            console.log('result: ', result);\n            console.log('allMessages: ', allMessages);\n            setMessages(allMessages);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var readUser = function _callee2() {\n    var user;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getUserDetails(userId));\n\n          case 2:\n            user = _context2.sent;\n            console.log('user: ', user);\n            setUser(user);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var setMessagesAfterSend = function setMessagesAfterSend(messages) {\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n  };\n\n  var _onSend = useCallback(function _callee5() {\n    var messages,\n        i,\n        saveData,\n        getData,\n        result,\n        _args5 = arguments;\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            messages = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : [];\n            arr.push(messages);\n\n            for (i = 0; i < arr.length; i++) {\n              console.log(JSON.stringify(arr[i])._id);\n              console.log(JSON.stringify(arr[i], null, 4));\n            }\n\n            saveData = function _callee3() {\n              return _regeneratorRuntime.async(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.prev = 0;\n                      _context3.next = 3;\n                      return _regeneratorRuntime.awrap(AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(arr)));\n\n                    case 3:\n                      _context3.next = 8;\n                      break;\n\n                    case 5:\n                      _context3.prev = 5;\n                      _context3.t0 = _context3[\"catch\"](0);\n                      alert('Failed to save the data to the storage');\n\n                    case 8:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, null, null, [[0, 5]], Promise);\n            };\n\n            saveData();\n\n            getData = function _callee4() {\n              var jsonValue;\n              return _regeneratorRuntime.async(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _context4.prev = 0;\n                      _context4.next = 3;\n                      return _regeneratorRuntime.awrap(AsyncStorage.getItem(STORAGE_KEY));\n\n                    case 3:\n                      jsonValue = _context4.sent;\n                      return _context4.abrupt(\"return\", jsonValue != null ? console.log(\" retrieved value:\" + JSON.parse(jsonValue)[1].user) : null);\n\n                    case 7:\n                      _context4.prev = 7;\n                      _context4.t0 = _context4[\"catch\"](0);\n\n                    case 9:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, null, null, [[0, 7]], Promise);\n            };\n\n            getData();\n            console.log('messages: ', messages);\n            _context5.next = 10;\n            return _regeneratorRuntime.awrap(storeChat(chatId, messages[0], loggedInUserId));\n\n          case 10:\n            result = _context5.sent;\n            setMessagesAfterSend(messages);\n\n          case 12:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  return _jsx(GiftedChat, {\n    textInputStyle: styles.composer,\n    minComposerHeight: 40,\n    minInputToolbarHeight: 60,\n    messages: messages,\n    showAvatarForEveryMessage: true,\n    enderSend: function enderSend(props) {\n      return _jsx(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          height: 60\n        },\n        children: _jsx(Send, {\n          children: _jsx(View, {\n            style: styles.btnSend,\n            children: _jsx(Ionicons, {\n              name: \"ios-send\",\n              size: 24,\n              color: \"red\"\n            })\n          })\n        })\n      });\n    },\n    onSend: function onSend(messages) {\n      return _onSend(messages);\n    },\n    user: {\n      _id: loggedInUserId,\n      name: name,\n      avatar: avatar\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  composer: {\n    borderRadius: 25,\n    borderWidth: 0.5,\n    borderColor: '#dddddd',\n    marginTop: 10,\n    marginBottom: 10,\n    paddingLeft: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingRight: 10,\n    fontSize: 16\n  },\n  btnSend: {\n    height: 40,\n    width: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: 10,\n    borderRadius: 50\n  }\n});\nexport default Chat;","map":{"version":3,"names":["React","useEffect","useCallback","useState","useLayoutEffect","UserImgWrapper","UserImg","Avatar","signOut","GiftedChat","AsyncStorage","Icon","Ionicons","getChat","storeChat","getUserDetails","auth","Chat","navigation","route","params","userId","name","avatar","loggedInUserId","currentUser","uid","messages","setMessages","user","setUser","loggedInUser","setLoggedInUser","chatId","setChatId","arr","STORAGE_KEY","receipentName","receipentProfileImage","currentuserId","currentUserData","getMessages","setOptions","title","headerLeft","marginLeft","uri","headerRight","marginRight","console","log","loggedInUserChats","chatIds","otherUser","otherUserChats","filter","value","includes","allMessages","userDetails","profileImageUrl","result","forEach","message","_id","readUser","setMessagesAfterSend","previousMessages","append","onSend","push","i","length","JSON","stringify","saveData","setItem","alert","getData","getItem","jsonValue","parse","styles","composer","props","flexDirection","alignItems","height","btnSend","StyleSheet","create","borderRadius","borderWidth","borderColor","marginTop","marginBottom","paddingLeft","paddingTop","paddingBottom","paddingRight","fontSize","width","justifyContent"],"sources":["/Users/stavan/Documents/End_Sem_Project/Screens/Chat.js"],"sourcesContent":["import React, { useEffect, useCallback, useState, useLayoutEffect } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity,ImageBackground } from 'react-native';\nimport {\n    UserImgWrapper,UserImg\n} from './Styles/MessageStyles';\nimport { Avatar } from 'react-native-elements';\nimport { signOut } from 'firebase/auth';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Icon from 'react-native-vector-icons/FontAwesome5';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { getChat, storeChat } from '../API/chat';\nimport { getUserDetails } from '../API/user';\nimport { auth } from '../firebase';\n\nconst Chat = ({ navigation, route }) => {\n    const { userId, name, avatar } = route.params;\n    const loggedInUserId = auth.currentUser.uid;\n    const [messages, setMessages] = useState([]);\n    const [user, setUser] = useState(null);\n    const [loggedInUser, setLoggedInUser] = useState(null);\n    const [chatId, setChatId] = useState(null);\n    const arr = [];\n    let STORAGE_KEY = \"CHAT_DATA\";\n    const {receipentName,receipentProfileImage,currentuserId} = route.params;\n    const currentUserData = route.params.currentUserData;\n\n    useEffect(() => {\n\n        getMessages();\n        // readUser();\n        // setMessages([\n        //     {\n        //         _id: 1,\n        //         text: 'Hello developer',\n        //         createdAt: new Date(),\n        //         user: {\n        //             _id: 2,\n        //             name: 'React Native',\n        //             avatar: 'https://placeimg.com/140/140/any',\n        //         },\n        //     },\n        // ])\n    }, []);\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: receipentName,\n            headerLeft: () => (\n                <View style={{ marginLeft: 20 }}>\n                    <UserImgWrapper>\n                    <UserImg source={{\n                        uri: receipentProfileImage,\n                    }} />\n                    </UserImgWrapper>\n                </View>\n            ),\n            headerRight: () => (\n                <TouchableOpacity style={{\n                    marginRight: 10\n                }}\n                >\n                    <Text></Text>\n                </TouchableOpacity>\n            )\n        })\n    }, [navigation]);\n\n    const getMessages = async () => {\n\n        let loggedInUser = await getUserDetails(loggedInUserId);\n        console.log('loggedInUser: ', loggedInUser);\n        setLoggedInUser(loggedInUser);\n        let loggedInUserChats = loggedInUser.chatIds;\n\n        let otherUser = await getUserDetails(userId);\n        let otherUserChats = otherUser.chatIds;\n\n        let chatId = loggedInUserChats.filter(value => otherUserChats.includes(value))[0];\n        console.log('chatId: ', chatId);\n        setChatId(chatId)\n\n        let allMessages = await getChat(chatId);\n        console.log('allMessages: ', allMessages);\n\n        let userDetails = {\n            [loggedInUserId]: {\n                name: loggedInUser.name,\n                avatar: loggedInUser.profileImageUrl\n            },\n            [userId]: {\n                name: otherUser.name,\n                avatar: otherUser.profileImageUrl\n            }\n        }\n\n        let result = allMessages.forEach((message) => {\n            message[\"user\"] = {\n                _id: message.userId,\n                ...userDetails[message.userId]\n            }\n            delete message.userId\n        })\n        console.log('result: ', result);\n        console.log('allMessages: ', allMessages);\n\n        setMessages(allMessages);\n    }\n\n    const readUser = async () => {\n        let user = await getUserDetails(userId);\n        console.log('user: ', user);\n        setUser(user);\n    }\n\n    const setMessagesAfterSend = (messages) => {\n        setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\n\n    }\n\n    const onSend = useCallback(async (messages = []) => {\n        arr.push(messages);\n        for(let i=0; i<arr.length; i++)\n        {\n            // console.log(\"element\" + i + \"=\" + arr[i].Text);\n            console.log(JSON.stringify(arr[i])._id);\n            console.log(JSON.stringify(arr[i], null, 4));\n        }\n        const saveData = async () => {\n            try {\n              await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(arr))\n            } catch (e) {\n              alert('Failed to save the data to the storage')\n            }\n          }\n\n          saveData();\n\n          const getData = async () => {\n            try {\n              const jsonValue = await AsyncStorage.getItem(STORAGE_KEY)\n              return jsonValue != null ? console.log(\" retrieved value:\" + JSON.parse(jsonValue)[1].user) : null;\n            } catch(e) {\n              // error reading value\n            }\n          }\n\n          getData();\n        \n        console.log('messages: ', messages);\n        let result = await storeChat(chatId, messages[0], loggedInUserId);\n        setMessagesAfterSend(messages);\n    }, []);\n\n    return (\n        <GiftedChat\n            textInputStyle={styles.composer}\n            minComposerHeight={40}\n            minInputToolbarHeight={60}\n            messages={messages}\n            showAvatarForEveryMessage={true}\n            enderSend={(props) => (\n                <View style={{ flexDirection: 'row', alignItems: 'center', height: 60 }}>\n                  {/* <BtnRound icon=\"camera\" iconColor={Colors.red} size={40} style={{ marginHorizontal: 5 }} onPress={() => this.choosePicture()} /> */}\n                  <Send>\n                    <View style={styles.btnSend}>\n                      <Ionicons name=\"ios-send\" size={24} color=\"red\" />\n                    </View>\n                  </Send>\n                </View>\n              )}\n            onSend={messages => onSend(messages)}\n            user={{\n                _id: loggedInUserId,\n                name: name,\n                avatar: avatar\n            }}\n        />\n    );\n}\n\nconst styles = StyleSheet.create({\n    composer:{\n        borderRadius: 25, \n        borderWidth: 0.5,\n        borderColor: '#dddddd',\n        marginTop: 10,\n        marginBottom: 10,\n        paddingLeft: 10,\n        paddingTop: 5,\n        paddingBottom: 5,\n        paddingRight: 10,\n        fontSize: 16\n      },\n      btnSend: {\n        height: 40,\n        width: 40,\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginRight: 10,\n        borderRadius: 50\n      }\n });\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}