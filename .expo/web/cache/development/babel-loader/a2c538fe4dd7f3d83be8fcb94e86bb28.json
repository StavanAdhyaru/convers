{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useCallback, useState, useLayoutEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Avatar } from 'react-native-elements';\nimport { auth, db } from \"../firebase\";\nimport { signOut } from 'firebase/auth';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Chat = function Chat(_ref) {\n  var _auth$currentUser2, _auth$currentUser3, _auth$currentUser4;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var arr = [];\n  var STORAGE_KEY = [];\n\n  var signOutNow = function signOutNow() {\n    signOut(auth).then(function () {\n      console.log(messages);\n      navigation.replace('Login');\n    }).catch(function (error) {});\n  };\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        var _auth$currentUser;\n\n        return _jsx(View, {\n          style: {\n            marginLeft: 20\n          },\n          children: _jsx(Avatar, {\n            rounded: true,\n            source: {\n              uri: auth == null ? void 0 : (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.photoURL\n            }\n          })\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsx(TouchableOpacity, {\n          style: {\n            marginRight: 10\n          },\n          onPress: signOutNow,\n          children: _jsx(Text, {\n            children: \"logout\"\n          })\n        });\n      }\n    });\n  }, [navigation]);\n  useEffect(function () {\n    setMessages([{\n      _id: 1,\n      text: 'Hello developer',\n      createdAt: new Date(),\n      user: {\n        _id: 2,\n        name: 'React Native',\n        avatar: 'https://placeimg.com/140/140/any'\n      }\n    }]);\n  }, []);\n\n  var _onSend = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n    arr.push(messages);\n\n    for (var i = 0; i < arr.length; i++) {\n      console.log(JSON.stringify(arr[i])._id);\n      console.log(JSON.stringify(arr[i], null, 4));\n    }\n\n    var saveData = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(arr)));\n\n            case 3:\n              alert('Data successfully saved');\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              alert('Failed to save the data to the storage');\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    };\n\n    saveData();\n\n    var getData = function _callee2() {\n      var jsonValue;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(STORAGE_KEY));\n\n            case 3:\n              jsonValue = _context2.sent;\n              return _context2.abrupt(\"return\", jsonValue != null ? console.log(\" retrieved value:\" + JSON.parse(jsonValue)[0]) : null);\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    getData();\n  }, []);\n\n  console.log(messages);\n  return _jsx(GiftedChat, {\n    messages: messages,\n    showAvatarForEveryMessage: true,\n    onSend: function onSend(messages) {\n      return _onSend(messages);\n    },\n    user: {\n      _id: auth == null ? void 0 : (_auth$currentUser2 = auth.currentUser) == null ? void 0 : _auth$currentUser2.email,\n      name: auth == null ? void 0 : (_auth$currentUser3 = auth.currentUser) == null ? void 0 : _auth$currentUser3.displayName,\n      avatar: auth == null ? void 0 : (_auth$currentUser4 = auth.currentUser) == null ? void 0 : _auth$currentUser4.photoURL\n    }\n  });\n};\n\nexport default Chat;","map":{"version":3,"names":["React","useEffect","useCallback","useState","useLayoutEffect","Avatar","auth","db","signOut","GiftedChat","AsyncStorage","Chat","navigation","messages","setMessages","arr","STORAGE_KEY","signOutNow","then","console","log","replace","catch","error","setOptions","headerLeft","marginLeft","uri","currentUser","photoURL","headerRight","marginRight","_id","text","createdAt","Date","user","name","avatar","onSend","previousMessages","append","push","i","length","JSON","stringify","saveData","setItem","alert","getData","getItem","jsonValue","parse","email","displayName"],"sources":["/Users/stavan/Documents/End_Sem_Project/screens/Chat.js"],"sourcesContent":["import React, { useEffect, useCallback, useState, useLayoutEffect } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport { Avatar } from 'react-native-elements';\nimport { auth, db } from '../firebase';\nimport { signOut } from 'firebase/auth';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Chat = ({ navigation }) => {\n    const [messages, setMessages] = useState([]);\n    const arr = [];\n    let STORAGE_KEY = [];\n    const signOutNow = () => {\n        signOut(auth).then(() => {\n            // Sign-out successful.\n            console.log(messages);\n\n            navigation.replace('Login');\n        }).catch((error) => {\n            // An error happened.\n        });\n    }\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            headerLeft: () => (\n                <View style={{ marginLeft: 20 }}>\n                    <Avatar\n                        rounded\n                        source={{\n                            uri: auth?.currentUser?.photoURL,\n                        }}\n                    />\n                </View>\n            ),\n            headerRight: () => (\n                <TouchableOpacity style={{\n                    marginRight: 10\n                }}\n                    onPress={signOutNow}\n                >\n                    <Text>logout</Text>\n                </TouchableOpacity>\n            )\n        })\n    }, [navigation]);\n\n    useEffect(() => {\n        setMessages([\n            {\n                _id: 1,\n                text: 'Hello developer',\n                createdAt: new Date(),\n                user: {\n                    _id: 2,\n                    name: 'React Native',\n                    avatar: 'https://placeimg.com/140/140/any',\n                },\n            },\n        ])\n    }, []);\n    const onSend = useCallback((messages = []) => {\n        setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\n        arr.push(messages);\n        for(let i=0; i<arr.length; i++)\n        {\n            // console.log(\"element\" + i + \"=\" + arr[i].Text);\n            console.log(JSON.stringify(arr[i])._id);\n            console.log(JSON.stringify(arr[i], null, 4));\n        }\n\n        const saveData = async () => {\n            try {\n              await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(arr))\n              alert('Data successfully saved')\n            } catch (e) {\n              alert('Failed to save the data to the storage')\n            }\n          }\n\n          saveData();\n\n          const getData = async () => {\n            try {\n              const jsonValue = await AsyncStorage.getItem(STORAGE_KEY)\n              return jsonValue != null ? console.log(\" retrieved value:\" + JSON.parse(jsonValue)[0]) : null;\n            } catch(e) {\n              // error reading value\n            }\n          }\n\n          getData();\n        \n    }, []);\n    console.log(messages);\n    return (\n        <GiftedChat\n            messages={messages}\n            showAvatarForEveryMessage={true}\n            onSend={messages => onSend(messages)}\n            user={{\n                _id: auth?.currentUser?.email,\n                name: auth?.currentUser?.displayName,\n                avatar: auth?.currentUser?.photoURL\n            }}\n        />\n    );\n}\n\nexport default Chat;\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect, useCallback, useState, useLayoutEffect } from 'react';\n// import { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\n// import { GiftedChat } from 'react-native-gifted-chat';\n \n// const Chat = ({ navigation }) => {\n//    const [messages, setMessages] = useState([]);\n\n//    useLayoutEffect(() => {\n//        navigation.setOptions({\n//            headerLeft: () => (\n//                <View style={{ marginLeft: 20 }}>\n//                </View>\n//            ),\n//            headerRight: () => (\n//                <TouchableOpacity style={{\n//                    marginRight: 10\n//                }}\n//                >\n//                    <Text>logout</Text>\n//                </TouchableOpacity>\n//            )\n//        })\n//    }, [navigation]);\n \n//    useEffect(() => {\n//        setMessages([\n//            {\n//                _id: 1,\n//                text: 'Hello developer',\n//                createdAt: new Date(),\n//                user: {\n//                    _id: 2,\n//                    name: 'React Native',\n//                    avatar: 'https://placeimg.com/140/140/any',\n//                },\n//            },\n//        ])\n//    }, []);\n//    const onSend = useCallback((messages = []) => {\n//        setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\n//    }, []);\n//    return (\n//        <GiftedChat\n//            messages={messages}\n//            showAvatarForEveryMessage={true}\n//            onSend={messages => onSend(messages)}\n//            user={{\n//                _id: 1,\n//                name: \"Stavan\",\n//                avatar: \"https://placeimg.com/140/140/any\",\n//            }}\n//        />\n//    );\n// }\n \n// export default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}